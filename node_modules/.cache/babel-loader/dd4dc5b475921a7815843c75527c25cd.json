{"ast":null,"code":"var _jsxFileName = \"/Users/ielyzavetapanchenko/Documents/GitHub/Udemy-practice-project/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport styles from \"./AddUser.module.css\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddUser(props) {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please entere a valid name and age!\"\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (> 0)\"\n      });\n      return;\n    } else {\n      props.setUsersList(prevUsersList => {\n        return [...prevUsersList, {\n          name: enteredName,\n          age: enteredUserAge\n        }];\n      });\n    }\n  };\n\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.inputForm,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: enteredUsername,\n          onChange: usernameChangeHandler,\n          autoComplete: \"off\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          onChange: ageChangeHandler,\n          value: enteredAge,\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/ielyzavetapanchenko/Documents/GitHub/Udemy-practice-project/src/components/Users/AddUser.js"],"names":["React","useState","useRef","styles","Card","Button","ErrorModal","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","title","message","enteredAge","setUsersList","prevUsersList","name","age","usernameChangeHandler","setEnteredUsername","target","ageChangeHandler","setEnteredAge","errorHandler","inputForm","enteredUsername"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport styles from \"./AddUser.module.css\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\n\nexport default function AddUser(props) {\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please entere a valid name and age!\",\n      });\n      return;\n    }\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (> 0)\",\n      });\n      return;\n    } else {\n      props.setUsersList((prevUsersList) => {\n        return [...prevUsersList, { name: enteredName, age: enteredUserAge }];\n      });\n    }\n  };\n\n  const usernameChangeHandler = (event) => {\n    setEnteredUsername(event.target.value);\n  };\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <Card className={styles.inputForm}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={enteredUsername}\n            onChange={usernameChangeHandler}\n            autoComplete=\"off\"\n            ref={nameInputRef}\n          />\n          <label htmlFor=\"age\">Age (Years)</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            onChange={ageChangeHandler}\n            value={enteredAge}\n            ref={ageInputRef}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}